global
    daemon
    maxconn 4096
    log stdout local0
    stats timeout 30s
    stats socket /var/run/haproxy.sock mode 666 level admin

defaults
    mode http
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    option httplog
    option dontlognull
    retries 3
    option redispatch

# Stats page
listen stats
    bind *:8080
    stats enable
    stats uri /stats
    stats refresh 5s
    stats admin if TRUE

# Frontend for WebSocket connections (sticky sessions)
frontend websocket_frontend
    bind *:4000
    mode http
    
    # Sticky session based on room ID
    capture request header Room-ID len 32
    
    # Route to WebSocket backend
    default_backend websocket_servers

# Backend for WebSocket servers with sticky sessions
backend websocket_servers
    mode http
    balance source  # Sticky sessions based on client IP
    
    # Health check endpoint
    option httpchk GET /health
    http-check expect status 200
    
    # Server definitions with health checks
    server ws-1 websocket-server-1:5000 check inter 10s fall 3 rise 2 maxconn 1000
    server ws-2 websocket-server-2:5000 check inter 10s fall 3 rise 2 maxconn 1000
    
    # Optional: Add more servers dynamically
    # server ws-3 websocket-server-3:5000 check inter 10s fall 3 rise 2 maxconn 1000 backup

# Frontend for API requests
frontend api_frontend
    bind *:5000
    mode http
    
    # Route to API backend
    default_backend api_servers

# Backend for API servers
backend api_servers
    mode http
    balance roundrobin
    
    # Health check
    option httpchk GET /health
    http-check expect status 200
    
    # Server definitions
    server api-1 api-server-1:5000 check inter 10s fall 3 rise 2 maxconn 500
    server api-2 api-server-2:5000 check inter 10s fall 3 rise 2 maxconn 500

# Frontend for SFU (media) servers
frontend sfu_frontend
    bind *:3478
    mode tcp
    
    # Route to SFU backend
    default_backend sfu_servers

# Backend for SFU servers
backend sfu_servers
    mode tcp
    balance leastconn  # Best for media streaming
    
    # TCP health check
    option tcp-check
    tcp-check connect
    
    # Server definitions
    server sfu-1 sfu-server-1:3478 check inter 10s fall 3 rise 2
    server sfu-2 sfu-server-2:3478 check inter 10s fall 3 rise 2

# Rate limiting and DDoS protection
frontend rate_limit
    bind *:80
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request reject if { sc_http_req_rate(0) gt 20 }
    
    # Security headers
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # Route based on path
    use_backend websocket_servers if { path_beg /socket.io }
    default_backend api_servers